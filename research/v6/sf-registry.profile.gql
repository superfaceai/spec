"Autonomous Service Registry
  Set of use cases to manage the registration of an autonomous service"

profile = "https://superface.ai/profile/superface/Register"

#
# Use cases
#
"Retrieve Service
 Retrieve a specific service by its registry id (URL)"
usecase RetrieveOneService safe {
  input {
    registryId
  }

  result Service
}

"Find Service
  Find services matching to a profile id"
usecase FindServicesByProfile safe {
  input {
    profileId
  }

  result {
    services [Service]
  }
}

"Register New Service
  Registers a new service in the registry. If a service with given serviceUrl and profileId is already registered, an error is returned."
usecase RegisterService unsafe {
  input {
    profileId
    serviceUrl
    mapSourceUrl
  }

  result Service
}

"Unregister Service
  Unregister service for a profile id"
usecase UnregisterService unsafe {
  input {
    profileId
    serviceUrl
  }
}

"Update Service
  Update service registry entry"
usecase UpdateRegistration idempotent {
  input {
    profileId
    serviceUrl
    mapSourceUrl
  }

  result Service  
}


"Bind 
  Binds caller to a service. Notify the registry the intention to connect with and use another service."
usecase Bind idempotent {
  input {
    serviceUrl
    profileId

    "Identifier of consuming service or application"
    sourceId
  }

  result {
    # To be decided ...
    grantId
    bindToken
  }
}


#
# Reusable Models
#


"Service
  Model of a service in the registry"
model Service {
  registryId
  profileId
  serviceUrl
  mapSourceUrl
  provider {
    providerId
  }
}

#
# Reusable Fields
#

"Registry id
  The id of the registry entry"
field registryId string

"Service URL
  The url of the service (provider host) conforming to a profile."
field serviceUrl string

"Map URL
  The URL of the map source between a profile and the actual provider interface"
field mapSourceUrl string

"Profile Id
  Reusable profile id property. Identifier of a semantic profile. Link (URL) to a profile in the profile service."
field profileId string
