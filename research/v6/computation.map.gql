
operation foo {
  run {                       # Eval step
    return {                  # "return" context variable, the evaluation ends immediately after this block
      answer = 42             # LHS JSON path = RHS Jessie
      hash = { a: 1, b: 2 }   # LHS JSON path = RHS Jessie
    }
  }
}

operation fooWithArgs {
  run {                           # Eval step
    return if (args.success) {    # "return" context variable, evaluated only when input argument "success" is truthy
      answer = 42
    }

    error if (!args.succes) {     # "error" context variable, evaluated only when input argument "success" is false
      message = "I am supposed to fail"
    }
  }
}

operation bar {
  run fooWithArgs(success: true) {
    return if (!run.error) {
      finalAnswer = "The final answer is " + run.return.answer
    }

    return if (run.error) {
      finalAnswer = "There was an error " + run.error.message
    }
  }
}

#
# BEWARE: experimental syntax without explicit run / set steps from here 
#
operation countArray {
  # Expermiental syntax without set
  count = 0

  # Experimental syntax without explicit `run` (step)
  forEach(args.array) {
    count = count + 1
  }

  # Experimental syntax without enclosing `run` (step)
  return {
    answer = 'this is the count: ' + count
  }

}
