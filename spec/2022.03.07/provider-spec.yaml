$schema: http://json-schema.org/draft-07/schema
type: object
properties:
  name:
    type: string
    pattern: "^[a-z][_\\-a-z]*$"
  services:
    type: array
    items:
      $ref: "#/definitions/Service"
    minItems: 1
  securitySchemes:
    type: array
    items:
      $ref: "#/definitions/SecurityScheme"
  defaultService:
    description: ServiceIdentifier must correspond to existing Service `id` from services.
    $ref: "#/definitions/ServiceIdentifier"
  parameters:
    type: array
    description: |
      Parameters define user-provided values that may be used within a Comlink Map 
      or within the provider definition.
    items:
      $ref: "#/definitions/Parameter"
required:
- name
- services
- defaultService
definitions:
  Service:
    type: object
    properties:
      id:
        $ref: "#/definitions/ServiceIdentifier"
      baseUrl:
        type: string
        examples:
        - https://swapi.dev/api
    required:
    - id
    - baseUrl
  ServiceIdentifier:
    $ref: "#/definitions/Identifier"
  Identifier:
    type: string
    pattern: "[_A-Za-z][_0-9A-Za-z]*"
    examples:
    - swapidev
  SecurityScheme:
    oneOf:
    - $ref: "#/definitions/ApiKeyHeaderSecurity"
    - $ref: "#/definitions/ApiKeyPathParamSecurity"
    - $ref: "#/definitions/ApiKeyBodyParamSecurity"
    - $ref: "#/definitions/ApiKeyQueryParamSecurity"
    - $ref: "#/definitions/BasicAuthSecurity"
    - $ref: "#/definitions/BearerTokenSecurity"
    - $ref: "#/definitions/DigestSecurity"
  SecurityIdentifier:
    $ref: "#/definitions/Identifier"
  ApiKeyHeaderSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/Identifier"
      type:
        type: string
        enum:
        - apiKey
      in:
        type: string
        enum:
        - header
      name:
        type: string
        description: Name of header
        examples:
        - X-API-Key
    required:
    - id
    - type
    - in
  ApiKeyQueryParamSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/SecurityIdentifier"
      type:
        type: string
        enum:
        - apiKey
      in:
        type: string
        enum:
        - query
      name:
        type: string
        description: Name of query parameter
    required:
    - id
    - type
    - in
  ApiKeyPathParamSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/SecurityIdentifier"
      type:
        type: string
        enum:
        - apiKey
      in:
        type: string
        enum:
        - path
      name:
        type: string
        description: Name of path parameter
    required:
    - id
    - type
    - in
  ApiKeyBodyParamSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/SecurityIdentifier"
      type:
        type: string
        enum:
        - apiKey
      in:
        type: string
        enum:
        - body
      name:
        type: string
        description: Name of body parameter
    required:
    - id
    - type
    - in
  DigestSecurity:
    type: object
    properties:
      authorizationHeader:
        description: Name of header containing authorization eg. Authorization
        type: string
      challengeHeader:
        description: Name of header containing challenge from the server eg. www-authenticate
        type: string
        default: www-authenticate
      id:
        type: string
      scheme:
        enum:
        - digest
        type: string
      statusCode:
        description: Code that should be returned from initial call for challenge eg. 401
        type: number
        default: 401
      type:
        enum:
        - http
        type: string
    required:
      - id
      - scheme
      - type
  BasicAuthSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/SecurityIdentifier"
      type:
        type: string
        enum:
        - http
      scheme:
        type: string
        enum:
        - basic
    required:
    - id
    - type
    - scheme
  BearerTokenSecurity:
    type: object
    properties:
      id:
        $ref: "#/definitions/SecurityIdentifier"
      type:
        type: string
        enum:
        - http
      scheme:
        type: string
        enum:
        - bearer
      bearerFormat:
        description: |
          A hint to the client to identify how the bearer token is formatted.
          Bearer tokens are usually generated by an authorization server, so this
          information is primarily for documentation purposes.
        type: string
        examples:
        - JWT
    required:
    - id
    - type
    - scheme
  Parameter:
    type: object
    properties:
      name:
        type: string
        description: Name of the parameter
      description:
        type: string
      default:
        type: string
        description: Default value for the parameter if the user does not provide a value
    required:
    - name
